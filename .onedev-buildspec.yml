version: 28
jobs:
- name: Release
  jobExecutor: internal
  steps:
  - !CheckoutStep
    name: checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: detect version
    runInContainer: true
    image: ubuntu
    interpreter: !DefaultInterpreter
      commands:
      - cat main.go|grep 'const version' | cut -d'"' -f 2 > buildVersion
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !SetBuildVersionStep
    name: set version
    buildVersion: '@file:buildVersion@'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: build
    runInContainer: true
    image: golang:1.21.3
    interpreter: !DefaultInterpreter
      commands:
      - GOOS=windows GOARCH=amd64 go build -o windows-amd64/tod.exe
      - GOOS=windows GOARCH=arm64 go build -o windows-arm64/tod.exe
      - GOOS=linux GOARCH=amd64 go build -o linux-amd64/tod
      - GOOS=linux GOARCH=arm64 go build -o linux-arm64/tod
      - GOOS=darwin GOARCH=amd64 go build -o mac-amd64/tod
      - GOOS=darwin GOARCH=arm64 go build -o mac-arm64/tod
      - GOOS=freebsd GOARCH=amd64 go build -o freebsd-amd64/tod
      - GOOS=freebsd GOARCH=arm64 go build -o freebsd-arm64/tod
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !PublishArtifactStep
    name: publish
    artifacts: '**/tod*'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
